<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>FillSkils</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-2793466305772882823</string>
			<key>name</key>
			<string>LocalDB</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>latin1</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGNjdYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK0HCBUWFxgZHSQoLDA0VSRudWxs0wkK
			CwwNEVYkY2xhc3NXTlMua2V5c1pOUy5vYmplY3RzgAyjDg8QgAKA
			A4AEoxITFIAFgAaACFR0eXBlVHJvd3NUa2V5c18QJlNlbGVjdGlv
			bkRldGFpbFR5cGVQcmltYXJ5S2V5ZWREZXRhaWxz0wkKCxobHIAH
			oKDSHh8gIVokY2xhc3NuYW1lWCRjbGFzc2VzXxATTlNNdXRhYmxl
			RGljdGlvbmFyeaMgIiNcTlNEaWN0aW9uYXJ5WE5TT2JqZWN00gkL
			JSaAC6EngAnSCSkqK1lOUy5zdHJpbmeAClJpZNIeHy0uXxAPTlNN
			dXRhYmxlU3RyaW5noy0vI1hOU1N0cmluZ9IeHzEyXk5TTXV0YWJs
			ZUFycmF5ozEzI1dOU0FycmF50h4fIjWiIiNfEA9OU0tleWVkQXJj
			aGl2ZXLRODlUZGF0YYABAAgAEQAaACMALQAyADcARQBLAFIAWQBh
			AGwAbgByAHQAdgB4AHwAfgCAAIIAhwCMAJEAugDBAMMAxADFAMoA
			1QDeAPQA+AEFAQ4BEwEVARcBGQEeASgBKgEtATIBRAFIAVEBVgFl
			AWkBcQF2AXkBiwGOAZMAAAAAAAACAQAAAAAAAAA6AAAAAAAAAAAA
			AAAAAAABlQ==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {1088, 557}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>-- Best match jobs 
select count(aa.jobid), aa.jobid from (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM (select * from usersskills where userid = '1') as a INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) desc;

-- Get all skills that do not match certain jobs
SELECT b.`skillid`, b.`jobid`, a.`skillid`, a.`userid`
FROM jobsskills as b left outer JOIN (select * from usersskills where userid = '1') as a using (`skillid`) where b.`jobid` = '33' and a.`skillid` is NULL; 

-- Find the top missing skills for a resume (skills that when added will give add to most jobs)
select count(dd.`missingskill`), sk.`name`, group_concat(jobid) from
(
SELECT b.`skillid` as missingskill, b.`jobid`
FROM jobsskills as b left outer JOIN (select * from usersskills where userid = '1') as usert using (`skillid`) where usert.`skillid` is NULL ) as dd join skills as sk on dd.`missingskill` = sk.`id`
group by dd.`missingskill`
order by count(dd.missingskill) desc;







select * from jobsskills js where js.`jobid` = '33';

SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM usersskills as a INNER JOIN jobsskills as b using (`skillid`) where b.`jobid`='33';



select jj.`id`, jj.`jobtitle` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('ios', 'mobile', 'iphone', 'ipad', 'app'))
union
select id, jobtitle from jobs where jobtitle like ('% ios%');

select jj.`id`, jj.`jobtitle`, jj.`url` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('wpf', 'silverlight', 'windows 8'))
union
select id, jobtitle, url from jobs where jobtitle like ('% wpf%')
union 
select id, jobtitle, url from jobs where jobtitle like ('% SILVERLIGHT%')
union 
select id, jobtitle, url from jobs where jobtitle like ('% windows 8%')
union 
select id, jobtitle, url from jobs where jobtitle like ('% windows PHONE 8%');
</string>
			<key>table</key>
			<string>usersskills</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>191</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>-- Get the skills for the userid
select us.skillid, sk.`name` 
from usersskills us join skills sk on us.`skillid` = sk.`id`
where us.`userid` = 1</string>
		<string>-- Get the skills for the userid
select us.skillid, sk.`name` from usersskills us join skills sk on us.`skillid` = sk.`id`
where us.`userid` = 1




SELECT COUNT(aa.jobid) as numberofskills, aa.jobid as jobid, jj.jobtitle as jobtitle, CONCAT(jj.`city`, " ,", jj.`state`) as location
FROM (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM 
(select * from usersskills where userid = 1) as a 
INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
join
jobs as jj on aa.`jobid` = jj.`id`
group by aa.`jobid`
order by count(aa.`jobid`) DESC LIMIT 5</string>
		<string>select jj.`id`, jj.`jobtitle` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('forth'))</string>
		<string>select jj.`id`, jj.`jobtitle` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('cloud'))</string>
		<string>SELECT COUNT(aa.jobid) as numberofskills, aa.jobid as jobid, jj.jobtitle as jobtitle, CONCAT(jj.`city`, " ,", jj.`state`) as location
FROM (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM 
(select * from usersskills where userid = 1) as a 
INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
join
jobs as jj on aa.`jobid` = jj.`id`
group by aa.`jobid`
order by count(aa.`jobid`) DESC LIMIT 5</string>
		<string>SELECT COUNT(aa.jobid) as numberofskills, aa.jobid as jobid, jj.jobtitle
FROM (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM 
(select * from usersskills where userid = 1) as a 
INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
join
jobs as jj on aa.`jobid` = jj.`id`
group by aa.`jobid`
order by count(aa.`jobid`) DESC LIMIT 5</string>
		<string>SELECT COUNT(aa.jobid) as numberofskills, aa.jobid as jobid, aa.jobtitle
FROM (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM 
(select * from usersskills where userid = 1) as a 
INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) DESC LIMIT 5</string>
		<string>SELECT COUNT(aa.jobid) as numberofskills, aa.jobid as jobid, aa.jobtitle
FROM (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM 
(select * from usersskills where userid = usersid) as a 
INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) DESC LIMIT 5</string>
		<string>select * from skills where
id in (
select skillid from usersskills)</string>
		<string>select * from skills where
id in (
select skillid from usersskills)

select jj.`id`, jj.`jobtitle` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('ios', 'mobile', 'iphone', 'ipad', 'app'))
union
select id, jobtitle from jobs where jobtitle like ('% ios%')</string>
		<string>select jj.`id`, jj.`jobtitle` from jobs jj where jj.id in (
select js.`jobid` from jobsskills js join skills ss on js.`skillid` = ss.`id` where ss.`name` in ('ios', 'mobile', 'iphone', 'ipad', 'app'))
union
select id, jobtitle from jobs where jobtitle like ('% ios%')</string>
		<string>-- Find the top missing skills for a resume (skills that when added will give add to most jobs)
select count(dd.`missingskill`), sk.`name`, group_concat(jobid) from
(
SELECT b.`skillid` as missingskill, b.`jobid`
FROM jobsskills as b left outer JOIN (select * from usersskills where userid = '1') as usert using (`skillid`) where usert.`skillid` is NULL ) as dd join skills as sk on dd.`missingskill` = sk.`id`
group by dd.`missingskill`
order by count(dd.missingskill) desc</string>
		<string>-- Best match jobs 
select count(aa.jobid), aa.jobid from (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM (select * from usersskills where userid = '1') as a INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) desc</string>
		<string>SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM usersskills as a INNER JOIN jobsskills as b using (`skillid`) where b.`jobid`='33'</string>
		<string>select * from jobsskills js where js.`jobid` = '33'</string>
		<string>-- Get all skills that do not match certain jobs
SELECT b.`skillid`, b.`jobid`, a.`skillid`, a.`userid`
FROM jobsskills as b left outer JOIN (select * from usersskills where userid = '1') as a using (`skillid`) where b.`jobid` = '33' and a.`skillid` is NULL</string>
		<string>-- Get all skills that do not match certain jobs
SELECT b.`skillid`, b.`jobid`, a.`skillid`, a.`userid`
FROM jobsskills as b left outer JOIN usersskills as a using (`skillid`) where b.`jobid` = '33' and a.`skillid` is NULL</string>
		<string>-- Best match jobs 
select count(aa.jobid), aa.jobid, aa.`jobtitle` from (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM (select * from usersskills where userid = '1') as a INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) desc</string>
		<string>-- Best match jobs 
select count(aa.jobid), aa.jobid from (
SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM usersskills as a INNER JOIN jobsskills as b using (`skillid`) 
) as aa 
group by aa.`jobid`
order by count(aa.`jobid`) desc</string>
		<string>SELECT DISTINCT a.`skillid`, a.`userid`, b.`jobid` FROM usersskills as a INNER JOIN jobsskills as b using (`skillid`)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.5.29</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
